DESIGN DOC

Topic Modelling

This folder contains the code for LDA Topic Modelling.
I wanted to create a custom wrapper for the pipeline to be used in future projects that makes
handling the model much simpler.

The initial design was to have the full pipeline in a single class. It needed a fit and a transform function.
After training, the model was simply too large to push to GitHub. I would like to avoid using the large
file system and I also want to keep the model small and agile.


July 15, 2019
-------------
* After having some issues with unpickling the model in other programs, I have decided to add the import into the
  pickle file.

July 14, 2019
-------------
* Finished building and testing the SciKit Learn version of the LDA model.
* Exported the model as lda_model_sklearn

July 13, 2019
-------------
* After pondering about the problem, I think a decent solution would be to only use the top m words from
  the topic probabilities and re-create the transform function to accomodate for this. This way,
  it would not be necessary to keep the full LDA model and likely would only keep a small data set within the
  model.
* As I worked through the above solution, I realized that I could simply reduce the words in the model. Setting the
  in-frequent word threshold to be higher, the number of words reduced drastically (likely due to the Pareto dist.).
* It appears that everything works the way it should now. However, the topic results are not up to my standard.
  What I would like to do, is create a third version that doesn't delete the data frame of all tested models.
  From here:
    1. See how large the data frame is, if it fits in GitHub it would be good to keep it as is and have a "best model"
    2. In Jupyter Notebooks, take a look at the various models and subjectively pick the best model.
    3. For the best model, determine a name for each topic and add that to the BioPharmaNewsApp program.
* Major issue - Forecasting doesn't really work well with GenSim's TF-IDF, would have to create functionality
  that works well with it. I've already sunk a lot of time into wrapping GenSim, but SciKit Learn also has all of
  these functions. Will Create a 4th (and hopefully final for the MVP) version of the functionality using
  Sci-Kit Learn instead.

July 11, 2019
-------------
* Split lda_topic_model.py into two seperate classes and pushed those into lda_topic_model_v2.py
* The model holder was still much too large, tried to only keep a single model.
* Even a single model is too large.